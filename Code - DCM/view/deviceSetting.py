# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import  QtWidgets
from PyQt5.QtWidgets import  QSpinBox, QDoubleSpinBox, QComboBox, QGridLayout,QMessageBox,QCheckBox


class Ui_Form(QtWidgets.QWidget): #change the class name here
    # add init function
    def __init__(self):
        super(Ui_Form, self).__init__()
        self.setupUi(self)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setWindowTitle( "PaceMaker Device Controller Monitor") # change window name here


        formbody = QGridLayout() #use form layout
        # buttom
        self.B_Load = QtWidgets.QPushButton("Load from User Data")
        self.B_Save = QtWidgets.QPushButton("Save")
        self.B_Upload = QtWidgets.QPushButton("Upload to Pacemaker")
        self.B_Reset = QtWidgets.QPushButton("Reset to Default")
        self.B_Cur = QtWidgets.QPushButton("Reset from Current Parameter")
        
        self.B_ConfirmMode = QtWidgets.QPushButton("Confirm this Mode")
        # mode
        self.I_Pace = QComboBox()
        self.I_Pace.addItems(["O-None","A-Atrium","V-Vertricle","D-Dual"])
        self.I_Sence = QComboBox()
        self.I_Sence.addItems(["O-None","A-Atrium","V-Vertricle","D-Dual"])
        self.I_Response = QComboBox()
        self.I_Response.addItems(["O-None","T-Triggered","I-Inhibited","D-Tracked"])
        self.I_Rate = QComboBox()
        self.I_Rate.addItems(["None","R-Rate"])
        # other perameter
        self.mode = QtWidgets.QLineEdit("OOO")

        self.LRL = QtWidgets.QSpinBox()
        self.LRL.setMinimum(30)
        self.LRL.setMaximum(175)
        self.LRL.setProperty("value", 60)

        self.URL = QtWidgets.QSpinBox()
        self.URL.setMinimum(50)
        self.URL.setMaximum(175)
        self.URL.setSingleStep(5)
        self.URL.setProperty("value", 120)

        self.MSR = QtWidgets.QSpinBox()
        self.MSR.setMinimum(50)
        self.MSR.setMaximum(175)
        self.MSR.setSingleStep(5)
        self.MSR.setProperty("value", 120)

        self.FAVD = QtWidgets.QSpinBox()
        self.FAVD.setMinimum(70)
        self.FAVD.setMaximum(300)
        self.FAVD.setSingleStep(10)
        self.FAVD.setProperty("value", 150)

        self.DAVD = QComboBox()
        self.DAVD.addItems(["Off","On"])

        self.MDAVD = QtWidgets.QSpinBox()
        self.MDAVD.setMinimum(30)
        self.MDAVD.setMaximum(100)
        self.MDAVD.setSingleStep(10)
        self.MDAVD.setProperty("value", 50)

        self.SAVDO_en = QCheckBox("Sensed AV Delay Offset(ms)")

        self.SAVDO = QtWidgets.QSpinBox()
        self.SAVDO.setMaximum(-10)
        self.SAVDO.setMinimum(-100)
        self.SAVDO.setSingleStep(10)
        self.SAVDO.setProperty("value", -10)

        self.APAR_en = QCheckBox("A Pulse Amp Regulated(V)")

        self.APAR = QtWidgets.QDoubleSpinBox()
        self.APAR.setMinimum(0.5)
        self.APAR.setMaximum(7.0)
        self.APAR.setSingleStep(0.1)
        self.APAR.setProperty("value", 3.5)

        self.VPAR_en = QCheckBox("V Pulse Amp Regulated(V)")

        self.VPAR = QtWidgets.QDoubleSpinBox()
        self.VPAR.setMinimum(0.5)
        self.VPAR.setMaximum(7.0)
        self.VPAR.setSingleStep(0.1)
        self.VPAR.setProperty("value", 3.5)

        self.APAU = QComboBox()
        self.APAU.addItems(["Off","1.25","2.5","3.75","5"])
        self.APAU.setProperty("value", "3.75")

        self.VPAU = QComboBox()
        self.VPAU.addItems(["Off","1.25","2.5","3.75","5"])
        self.VPAU.setProperty("value", "3.75")

        self.APW = QtWidgets.QSpinBox()
        self.APW.setMinimum(1)
        self.APW.setMaximum(30)
        self.APW.setSingleStep(1)
        self.APW.setProperty("value", 1)

        self.VPW = QtWidgets.QSpinBox()
        self.VPW.setMinimum(1)
        self.VPW.setMaximum(30)
        self.VPW.setSingleStep(1)
        self.VPW.setProperty("value", 1)

        self.AS = QtWidgets.QDoubleSpinBox()
        self.AS.setMinimum(0.25)
        self.AS.setMaximum(10)
        self.AS.setSingleStep(0.5)
        self.AS.setProperty("value", 0.75)

        self.VS = QtWidgets.QDoubleSpinBox()
        self.VS.setMinimum(0.25)
        self.VS.setMaximum(10)
        self.VS.setSingleStep(0.5)
        self.VS.setProperty("value", 0.75)

        self.VRP = QtWidgets.QSpinBox()
        self.VRP.setMinimum(150)
        self.VRP.setMaximum(500)
        self.VRP.setSingleStep(10)
        self.VRP.setProperty("value", 320)

        self.ARP = QtWidgets.QSpinBox()
        self.ARP.setMinimum(150)
        self.ARP.setMaximum(500)
        self.ARP.setSingleStep(10)
        self.ARP.setProperty("value", 250)

        self.PVARP = QtWidgets.QSpinBox()
        self.PVARP.setMinimum(150)
        self.PVARP.setMaximum(500)
        self.PVARP.setSingleStep(10)
        self.PVARP.setProperty("value", 250)

        self.PVARPE_en = QCheckBox("PVARP Extention(ms)")

        self.PVARPE = QtWidgets.QSpinBox()
        self.PVARPE.setMinimum(50)
        self.PVARPE.setMaximum(400)
        self.PVARPE.setSingleStep(50)
        self.PVARPE.setProperty("value", "Off")

        self.HRL = QComboBox()
        self.HRL.addItems(["Off","Same as LRL"])

        self.RS = QComboBox()
        self.RS.addItems(["Off","3",'6','9','12','15','21','25%'])

        self.ATRM = QComboBox()
        self.ATRM.addItems(["Off","On"])

        self.ATRD = QtWidgets.QSpinBox()
        self.ATRD.setMinimum(10)
        self.ATRD.setMaximum(2000)
        self.ATRD.setSingleStep(20)
        self.ATRD.setProperty("value", 20)

        self.ATRFT = QtWidgets.QSpinBox()
        self.ATRFT.setMinimum(1)
        self.ATRFT.setMaximum(5)
        self.ATRFT.setSingleStep(1)
        self.ATRFT.setProperty("value", 1)

        self.VB = QtWidgets.QSpinBox()
        self.VB.setMinimum(30)
        self.VB.setMaximum(60)
        self.VB.setSingleStep(10)
        self.VB.setProperty("value", 40)

        self.AT = QComboBox()
        self.AT.addItems(["V-Low","Low","Med-Low","Med","Med-High","High","V-High"])

        self.ReactionT = QtWidgets.QSpinBox()
        self.ReactionT.setMinimum(10)
        self.ReactionT.setMaximum(50)
        self.ReactionT.setSingleStep(10)
        self.ReactionT.setProperty("value", 40)

        self.RF = QtWidgets.QSpinBox()
        self.RF.setMinimum(1)
        self.RF.setMaximum(16)
        self.RF.setSingleStep(1)
        self.RF.setProperty("value", 8)

        self.RecoveryT = QtWidgets.QSpinBox()
        self.RecoveryT.setMinimum(2)
        self.RecoveryT.setMaximum(16)
        self.RecoveryT.setSingleStep(1)
        self.RecoveryT.setProperty("value", 5)






        # add component to form
        self.O_modeLable = QtWidgets.QLabel("Mode:")
        formbody.addWidget(self.O_modeLable,0,0)
        formbody.addWidget(self.mode,0,1)
        formbody.addWidget(self.B_ConfirmMode,0,2)

        formbody.addWidget(QtWidgets.QLabel("Chambers Paces"),1,0)
        formbody.addWidget(self.I_Pace,1,1)
        formbody.addWidget(QtWidgets.QLabel("Chambers Sensed"),1,2)
        formbody.addWidget(self.I_Sence,1,3)

        formbody.addWidget(QtWidgets.QLabel("Response To Sensing"),2,0)
        formbody.addWidget(self.I_Response,2,1)
        formbody.addWidget(QtWidgets.QLabel("Rate Modulation"),2,2)
        formbody.addWidget(self.I_Rate,2,3)

        formbody.addWidget(QtWidgets.QLabel("Parameters (Disabled parameters will have value Off, Checkbox to set input enabled)"),3,0,1,3)

        formbody.addWidget(QtWidgets.QLabel("Lower Rate Limit(ppm)"),4,0)
        formbody.addWidget(self.LRL,4,1)
        formbody.addWidget(QtWidgets.QLabel("Upper Rate Limit(ppm)"),4,2)
        formbody.addWidget(self.URL,4,3)

        formbody.addWidget(QtWidgets.QLabel("Max Sensor Rate(ppm)"),5,0)
        formbody.addWidget(self.MSR,5,1)
        formbody.addWidget(QtWidgets.QLabel("Fixed AV Delay(ms)"),5,2)
        formbody.addWidget(self.FAVD,5,3)

        formbody.addWidget(QtWidgets.QLabel("Dynamic AV Delay"),6,0)
        formbody.addWidget(self.DAVD,6,1)
        formbody.addWidget(QtWidgets.QLabel("Min Dynamic AV Delay(ms)"),6,2)
        formbody.addWidget(self.MDAVD,6,3)

        formbody.addWidget(self.SAVDO_en,7,0)
        formbody.addWidget(self.SAVDO,7,1)
        formbody.addWidget(self.APAR_en,7,2)
        formbody.addWidget(self.APAR,7,3)

        formbody.addWidget(self.VPAR_en,8,0)
        formbody.addWidget(self.VPAR,8,1)
        formbody.addWidget(QtWidgets.QLabel("A Pulse Amp Unregulated(V)"),8,2)
        formbody.addWidget(self.APAU,8,3)

        formbody.addWidget(QtWidgets.QLabel("V Pulse Amp Unregulated(V)"),9,0)
        formbody.addWidget(self.VPAU,9,1)
        formbody.addWidget(QtWidgets.QLabel("A Pulse Width(ms)"),9,2)
        formbody.addWidget(self.APW,9,3)

        formbody.addWidget(QtWidgets.QLabel("V Pulse Width(ms)"),10,0)
        formbody.addWidget(self.VPW,10,1)
        formbody.addWidget(QtWidgets.QLabel("A Sensitive(mV)"),10,2)
        formbody.addWidget(self.AS,10,3)

        formbody.addWidget(QtWidgets.QLabel("V Sensitive(mV)"),11,0)
        formbody.addWidget(self.VS,11,1)
        formbody.addWidget(QtWidgets.QLabel("V Refractory Period(ms)"),11,2)
        formbody.addWidget(self.VRP,11,3)

        formbody.addWidget(QtWidgets.QLabel("A Refractory Period(ms)"),12,0)
        formbody.addWidget(self.ARP,12,1)
        formbody.addWidget(QtWidgets.QLabel("PVARP(ms)"),12,2)
        formbody.addWidget(self.PVARP,12,3)

        formbody.addWidget(QtWidgets.QLabel("Hysteresis Rate Limit"),13,0)
        formbody.addWidget(self.HRL,13,1)
        formbody.addWidget(self.PVARPE_en,13,2)
        formbody.addWidget(self.PVARPE,13,3)

        formbody.addWidget(QtWidgets.QLabel("Rate Smoothing"),14,0)
        formbody.addWidget(self.RS,14,1)
        formbody.addWidget(QtWidgets.QLabel("ATR Mode"),14,2)
        formbody.addWidget(self.ATRM,14,3)

        formbody.addWidget(QtWidgets.QLabel("ATR Duration(cc)"),15,0)
        formbody.addWidget(self.ATRD,15,1)
        formbody.addWidget(QtWidgets.QLabel("ATR Fallback Time(min)"),15,2)
        formbody.addWidget(self.ATRFT,15,3)

        formbody.addWidget(QtWidgets.QLabel("Ventricular Blanking(ms)"),16,0)
        formbody.addWidget(self.VB,16,1)
        formbody.addWidget(QtWidgets.QLabel("Activiry Threshold"),16,2)
        formbody.addWidget(self.AT,16,3)

        formbody.addWidget(QtWidgets.QLabel("Reaction Time(sec)"),17,0)
        formbody.addWidget(self.ReactionT,17,1)
        formbody.addWidget(QtWidgets.QLabel("Response Factor"),17,2)
        formbody.addWidget(self.RF,17,3)

        formbody.addWidget(QtWidgets.QLabel("Recovery Time(min)"),18,0)
        formbody.addWidget(self.RecoveryT,18,1)

        
        formbody.addWidget(self.B_Upload,19,0,1,4)
        formbody.addWidget(self.B_Cur,20,0,1,2)
        formbody.addWidget(self.B_Reset,20,2,1,2)
        formbody.addWidget(self.B_Load,21,0,1,2)
        formbody.addWidget(self.B_Save,21,2,1,2)
        self.setLayout(formbody) #set layout
 
        formbody.setVerticalSpacing(15)
        self.setFixedWidth(600)

    def confirm(self,mes):
        result= QMessageBox.question(self, 'Confirm Action', mes, QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        return result
    
    def showMsg(self,type,str):
        QMessageBox.about(self, type, str)
    
